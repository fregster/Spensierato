<?php
$path = get_include_path();
set_include_path  ($path. PATH_SEPARATOR .dirname(__FILE__));

// This line must be used to load the Text/Diff.php PEAR module
require_once("Text/Diff.php");

abstract class diffCompare{

	public static function multi_diff($base_text, $edits){
		if (empty($edits)) {
			return $base_text;
		}

		$current_edit = array_shift($edits);
		while(!empty($edits)){
			$current_edit = self::single_diff($current_edit, array_shift($edits));
		}

		$diff = new diffClass($base_text, $current_edit);
		$result = $diff->render();
		unset($diff);
		return $result;
	}

	private static function single_diff($old, $new){
		$diff = new diffClass($old, $new);
		$result = $diff->merge();
		unset($diff);
		return $result;
	}
}

class diffClass extends Text_MappedDiff {

	public function __construct($from_text,$to_text) {

		// Split the text into words
		//$from_words = preg_split('/\b/',$from_text);
		//$to_words = preg_split('/\b/',$to_text);

		// These alternate split statements will split the text into individual characters
		$from_words = str_split($from_text,1);
		$to_words = str_split($to_text,1);

		// These split statements will split the text into lines
		//$from_words = explode("\n",$from_text);
		//$to_words = explode("\n",$to_text);

		// Text_MappedDiff requires copies of these variables
		$mapped_from_words = $from_words;
		$mapped_to_words = $to_words;

		// Call the construct method of the parent class
		parent::Text_MappedDiff($from_words,$to_words,$mapped_from_words,$mapped_to_words);
	}

	// Renders the difference
	public function render() {
		$difference = $this->getDiff(); // Calls the getDiff() method, part of Text_MappedDiff
		$render = ''; // This will be the rendered difference.
		foreach ($difference as $op) {
			// $op is the operation getDiff() has calculated.
			// You can tell which operation (add, delete or change) $op is by checking which class the object is
			if ($op instanceof Text_Diff_Op_copy) { // This uses the instanceof operator which is only in PHP5+, in PHP4 you can use is_a()
				// Text was copied (not changed), add it to the rendered difference unmodified
				$render .= implode('',$op->final);
			} elseif ($op instanceof Text_Diff_Op_delete) {
				// Text was deleted, add it to the rendered difference in red
				$temp = implode('',$op->orig);
				$temp = str_replace(htmlentities('</p><p>'), html_entity_decode('</span></p><p><span style="background-color: #FF0000;">'), $temp);
				$render .= '<span style="background-color: #FF0000;">' . $temp . '</span>';
			} elseif ($op instanceof Text_Diff_Op_add) {
				// Text was added, add it to the rendered difference in green
				$temp = implode('',$op->final);
				$temp = str_replace(htmlentities('</p><p>'), html_entity_decode('</span></p><p><span style="background-color: #00FF00;">'), $temp);
				$render .= '<span style="background-color: #00FF00;">' . $temp . '</span>';
			} elseif ($op instanceof Text_Diff_Op_change) {
				// Text was modified, add it to the rendered difference as if the original text was deleted and the new text was added
				$temp = implode('',$op->orig);
				$temp = str_replace(htmlentities('</p><p>'), html_entity_decode('</span></p><p><span style="background-color: #FF0000;">'), $temp);
				$render .= '<span style="background-color: #FF0000;">' . $temp . '</span>';
				$temp = implode('',$op->final);
				$temp = str_replace(htmlentities('</p><p>'), html_entity_decode('</span></p><p><span style="background-color: #00FF00;">'), $temp);
				$render .= '<span style="background-color: #00FF00;">' . $temp . '</span>';
			}
		}

		return $render;
	}

	public function merge(){
		$difference = $this->getDiff();
		$merge = '';
		foreach ($difference as $op){
			if ($op instanceof Text_Diff_Op_copy || $op instanceof Text_Diff_Op_add || $op instanceof Text_Diff_Op_change) {
				$merge .= implode('', $op->final);
			}
			else if ($op instanceof Text_Diff_Op_delete) {
				$merge .= implode('', $op->orig);
			}
		}
		return $merge;
	}

}

?>