<xsl:template match="/">
        <html>
			<xsl:call-template name="header"/>

			<xsl:element name="body">
			<xsl:attribute name="onload">init();</xsl:attribute>
			<div id="notifications" style="visibility: hidden;">Notifications</div>
					<div id="page_edit">
					<xsl:element name="form">
						<xsl:attribute name="action"></xsl:attribute>
						<xsl:attribute name="method">POST</xsl:attribute>
						
						<!-- test if we might upload a file and if so add the multipart attribute -->
						<xsl:attribute name="enctype">multipart/form-data</xsl:attribute>
						
						<xsl:attribute name="id">e_<xsl:value-of select="/page/body/element/@id" /></xsl:attribute>
						<xsl:call-template name="edit_header"/><p>
						
						<xsl:apply-templates select="/page/body/element/data"/>
						
						</p>
						<xsl:call-template name="edit_footer"/>
					</xsl:element>
					</div>
			</xsl:element>
        </html>
</xsl:template>

<xsl:template match="*[@type = 'html']">
	
	<div>
		<xsl:element name="textarea">
		<xsl:attribute name="name"><xsl:value-of select="name()" /></xsl:attribute>
		<xsl:attribute name="style">width:100%</xsl:attribute>
		<xsl:attribute name="cols">80</xsl:attribute>
		<xsl:attribute name="rows">15</xsl:attribute>
		<xsl:attribute name="id">content</xsl:attribute>
		<xsl:choose>
			<xsl:when test="name() = 'html'">
				<xsl:attribute name="class">mceAdvanced</xsl:attribute>
			</xsl:when>
			<xsl:otherwise>
			<xsl:attribute name="class">mceSimple</xsl:attribute>
			</xsl:otherwise>		
		</xsl:choose>
		
		<xsl:value-of select="." />
		</xsl:element>
	</div>
	
</xsl:template>
	
<xsl:template match="*[@type = 'text']">
	<div>
		<xsl:value-of select="name()" />: <xsl:element name="input">
		<xsl:attribute name="name"><xsl:value-of select="name()" /></xsl:attribute>
		<xsl:attribute name="value"><xsl:value-of select="." /></xsl:attribute>
		</xsl:element>
	</div>
</xsl:template>
	
<xsl:template match="*[@type = 'file']">	
	<div>
		<xsl:element name="input">
			<xsl:attribute name="type">hidden</xsl:attribute>
			<xsl:attribute name="name">MAX_FILE_SIZE</xsl:attribute>
			<xsl:attribute name="value"><xsl:value-of select="/page/settings/max_file_size" /></xsl:attribute>
		</xsl:element>
		Choose a file to upload: <input name="uploadedfile" type="file" /><br />
	</div>
</xsl:template>
		
<xsl:template match="*[@type = 'warning']">
	<div>
		<xsl:value-of select="./title" /><em><xsl:value-of select="./description" /></em>
	</div>
</xsl:template>
		
<xsl:template match="*[@type = 'auto']">
	<div>
		<xsl:value-of select="name()" />: <xsl:value-of select="." />
	</div>
</xsl:template>

<xsl:template name="edit_header">
	<div id="edit_header">
		Created By: <xsl:value-of select="/page/body/element/@creator" /> ( ) | 
		<xsl:if test="/page/body/element/@editor">
			Edited by: <xsl:value-of select="/page/body/element/@editor" /> ( ) | 
			Revision: <xsl:value-of select="/page/body/element/@revision" /><br />
			<xsl:if test="/page/body/element/@approved">
				Last Aproved By: <xsl:value-of select="/page/body/element/@approved" /><br />
				Approved On: <xsl:value-of select="/page/body/element/@approver" /><br />
			</xsl:if>
		</xsl:if>
	</div>
</xsl:template>

<xsl:template name="edit_footer">
	<div id="edit_footer">	
		<xsl:element name="input">
			<xsl:attribute name="type">button</xsl:attribute>
			<xsl:attribute name="value">Re-Load</xsl:attribute>
			<xsl:attribute name="onclick">ajaxLoad();</xsl:attribute>
		</xsl:element>
		<xsl:element name="input">
			<xsl:attribute name="type">submit</xsl:attribute>
			<xsl:choose>
				<xsl:when test="/page/security/can_approve = 1"><xsl:attribute name="value">Save and Close</xsl:attribute></xsl:when>
				<xsl:otherwise><xsl:attribute name="value">Submit for Approval and Close</xsl:attribute></xsl:otherwise>
			</xsl:choose>
		</xsl:element>
	</div>
</xsl:template>

<xsl:template name="header">
			<head>
				<xsl:element name="title"><xsl:value-of select="/page/settings/site_name_short" /> | Content Editor</xsl:element>
				
				<xsl:element name="meta">
					<xsl:attribute name="name">keywords</xsl:attribute>
					<xsl:attribute name="content">Stylesheets</xsl:attribute>
				</xsl:element>
				
				<xsl:element name="link">
					<xsl:attribute name="href"><xsl:value-of select="/page/settings/document_root" />/css</xsl:attribute>
					<xsl:attribute name="type">text/css</xsl:attribute>
					<xsl:attribute name="rel">stylesheet</xsl:attribute>
				</xsl:element>
				
				<script type="text/javascript">
					var document_root = '<xsl:value-of select="/page/settings/document_root" />';
					var current_page = '<xsl:value-of select="/page/@id" />';
					
					function returnRefresh(returnVal) 
					{
						window.top.document.body.innerHTML = '';
					    window.top.location = document_root+'/'+current_page;
					}
				</script>
				<xsl:element name="script">
					<xsl:attribute name="type">text/javascript</xsl:attribute>
					<xsl:attribute name="src"><xsl:value-of select="/page/settings/site_folder_js" />mootools/mootools-1.2-core-yc.js,mootools/mootools-1.2-more.js,public.js,logged_in.js,admin.js</xsl:attribute>
				</xsl:element>
				
				<xsl:element name="script">
					<xsl:attribute name="type">text/javascript</xsl:attribute>
					<!-- <xsl:attribute name="src"><xsl:value-of select="/page/settings/document_root" />/editor/tiny_mce.js</xsl:attribute>-->
					<xsl:attribute name="src"><xsl:value-of select="/page/settings/document_root" />/editor/tiny_mce_gzip.js</xsl:attribute>
				</xsl:element>
				
				

				<script type="text/javascript">
				tinyMCE_GZ.init({
					plugins : 'safari,paste,fullscreen,spellchecker,inlinepopups',
					themes : 'simple,advanced',
					languages : 'en',
					disk_cache : false,
					debug : true
				});
				</script> 

				<script type="text/javascript">
				tinyMCE.init({
						mode : "textareas",
						theme : "simple",
						force_br_newlines : true,
						editor_selector : "mceSimple",
						button_tile_map : true
                        });
				tinyMCE.init({
						mode : "textareas",
						<!-- init_instance_callback : 'resizeEditorBox',-->
						theme:"advanced",
						width:"100%",
						editor_selector : "mceAdvanced",
						theme_advanced_buttons1:"undo,redo,|,pasteword,pastetext,removeformat,|,justifyleft,justifycenter,justifyfull,justifyright,|,spellchecker,|,bold,italic,underline,strikethrough,forecolor,formatselect,charmap|,fullscreen",
						theme_advanced_buttons2:"outdent,indent,|,link,unlink|,bullist,numlist,blockquote,|",
						theme_advanced_buttons3:"",
						language:"en",
						spellchecker_languages:"+English=en",
						theme_advanced_toolbar_location:"top",
						theme_advanced_toolbar_align:"left",
						theme_advanced_statusbar_location:"bottom",
						theme_advanced_resizing:"1",
						dialog_type:"modal",
						relative_urls:"",
						remove_script_host:"",
						convert_urls:"",
						apply_source_formatting:"",
						remove_linebreaks:"1",
						paste_convert_middot_lists:"1",
						paste_remove_spans:"1",
						paste_remove_styles:"1",
						gecko_spellcheck:"1",
						plugins:"safari,paste,fullscreen,spellchecker,inlinepopups",
						
						button_tile_map : true,
						setup : function(ed) { ed.onKeyUp.add(function(ed, e) { delayedSave(); })	}
					      });
				element_id = 'e_<xsl:value-of select="/page/body/element/@id" />';		
				</script>
			</head>
	</xsl:template>